# coding: utf-8

"""
    DDF USDM API

    A simple TransCelerate Digital Data Flow (DDF) Study Definitions Repository API.

    The version of the OpenAPI document: 3.10.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.administration_input import AdministrationInput  # noqa: E501

class TestAdministrationInput(unittest.TestCase):
    """AdministrationInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdministrationInput:
        """Test AdministrationInput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdministrationInput`
        """
        model = AdministrationInput()  # noqa: E501
        if include_optional:
            return AdministrationInput(
                id = '0',
                name = '0',
                label = '',
                description = '',
                duration = openapi_client.models.administration_duration.AdministrationDuration(
                    id = '0', 
                    quantity = openapi_client.models.quantity.Quantity(
                        id = '0', 
                        value = 1.337, 
                        unit = openapi_client.models.alias_code.AliasCode(
                            id = '0', 
                            standard_code = openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', ), 
                            standard_code_aliases = [
                                openapi_client.models.code.Code(
                                    id = '0', 
                                    code = '', 
                                    code_system = '', 
                                    code_system_version = '', 
                                    decode = '', 
                                    instance_type = 'Code', )
                                ], 
                            instance_type = 'AliasCode', ), 
                        instance_type = 'Quantity', ), 
                    description = '', 
                    duration_will_vary = True, 
                    reason_duration_will_vary = '', 
                    instance_type = 'AdministrationDuration', ),
                dose = openapi_client.models.quantity.Quantity(
                    id = '0', 
                    value = 1.337, 
                    unit = openapi_client.models.alias_code.AliasCode(
                        id = '0', 
                        standard_code = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        standard_code_aliases = [
                            openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', )
                            ], 
                        instance_type = 'AliasCode', ), 
                    instance_type = 'Quantity', ),
                route = openapi_client.models.alias_code.AliasCode(
                    id = '0', 
                    standard_code = openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', ), 
                    standard_code_aliases = [
                        openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', )
                        ], 
                    instance_type = 'AliasCode', ),
                frequency = openapi_client.models.alias_code.AliasCode(
                    id = '0', 
                    standard_code = openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', ), 
                    standard_code_aliases = [
                        openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', )
                        ], 
                    instance_type = 'AliasCode', ),
                administrable_product_id = '',
                medical_device_id = '',
                notes = [
                    openapi_client.models.comment_annotation.CommentAnnotation(
                        id = '0', 
                        text = '', 
                        codes = [
                            openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', )
                            ], 
                        instance_type = 'CommentAnnotation', )
                    ],
                instance_type = 'Administration'
            )
        else:
            return AdministrationInput(
                id = '0',
                name = '0',
                duration = openapi_client.models.administration_duration.AdministrationDuration(
                    id = '0', 
                    quantity = openapi_client.models.quantity.Quantity(
                        id = '0', 
                        value = 1.337, 
                        unit = openapi_client.models.alias_code.AliasCode(
                            id = '0', 
                            standard_code = openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', ), 
                            standard_code_aliases = [
                                openapi_client.models.code.Code(
                                    id = '0', 
                                    code = '', 
                                    code_system = '', 
                                    code_system_version = '', 
                                    decode = '', 
                                    instance_type = 'Code', )
                                ], 
                            instance_type = 'AliasCode', ), 
                        instance_type = 'Quantity', ), 
                    description = '', 
                    duration_will_vary = True, 
                    reason_duration_will_vary = '', 
                    instance_type = 'AdministrationDuration', ),
                dose = openapi_client.models.quantity.Quantity(
                    id = '0', 
                    value = 1.337, 
                    unit = openapi_client.models.alias_code.AliasCode(
                        id = '0', 
                        standard_code = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        standard_code_aliases = [
                            openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', )
                            ], 
                        instance_type = 'AliasCode', ), 
                    instance_type = 'Quantity', ),
                route = openapi_client.models.alias_code.AliasCode(
                    id = '0', 
                    standard_code = openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', ), 
                    standard_code_aliases = [
                        openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', )
                        ], 
                    instance_type = 'AliasCode', ),
                frequency = openapi_client.models.alias_code.AliasCode(
                    id = '0', 
                    standard_code = openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', ), 
                    standard_code_aliases = [
                        openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', )
                        ], 
                    instance_type = 'AliasCode', ),
                instance_type = 'Administration',
        )
        """

    def testAdministrationInput(self):
        """Test AdministrationInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
