# coding: utf-8

"""
    DDF USDM API

    A simple TransCelerate Digital Data Flow (DDF) Study Definitions Repository API.

    The version of the OpenAPI document: 3.10.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.study_version_input_study_designs_inner import StudyVersionInputStudyDesignsInner

class TestStudyVersionInputStudyDesignsInner(unittest.TestCase):
    """StudyVersionInputStudyDesignsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StudyVersionInputStudyDesignsInner:
        """Test StudyVersionInputStudyDesignsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StudyVersionInputStudyDesignsInner`
        """
        model = StudyVersionInputStudyDesignsInner()
        if include_optional:
            return StudyVersionInputStudyDesignsInner(
                id = '0',
                name = '0',
                label = '',
                description = '',
                study_type = openapi_client.models.code.Code(
                    id = '0', 
                    code = '', 
                    code_system = '', 
                    code_system_version = '', 
                    decode = '', 
                    instance_type = 'Code', ),
                study_phase = openapi_client.models.alias_code.AliasCode(
                    id = '0', 
                    standard_code = openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', ), 
                    standard_code_aliases = [
                        openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', )
                        ], 
                    instance_type = 'AliasCode', ),
                therapeutic_areas = [
                    openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', )
                    ],
                characteristics = [
                    openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', )
                    ],
                encounters = [
                    openapi_client.models.encounter.Encounter(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        previous_id = '', 
                        next_id = '', 
                        scheduled_at_id = '', 
                        environmental_settings = [
                            openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', )
                            ], 
                        contact_modes = [
                            
                            ], 
                        transition_start_rule = openapi_client.models.transition_rule.TransitionRule(
                            id = '0', 
                            name = '0', 
                            label = '', 
                            description = '', 
                            text = '', 
                            instance_type = 'TransitionRule', ), 
                        transition_end_rule = openapi_client.models.transition_rule.TransitionRule(
                            id = '0', 
                            name = '0', 
                            label = '', 
                            description = '', 
                            text = '', 
                            instance_type = 'TransitionRule', ), 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'Encounter', )
                    ],
                activities = [
                    openapi_client.models.activity.Activity(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        previous_id = '', 
                        next_id = '', 
                        child_ids = [
                            ''
                            ], 
                        defined_procedures = [
                            openapi_client.models.procedure.Procedure(
                                id = '0', 
                                name = '0', 
                                label = '', 
                                description = '', 
                                procedure_type = '', 
                                code = openapi_client.models.code.Code(
                                    id = '0', 
                                    code = '', 
                                    code_system = '', 
                                    code_system_version = '', 
                                    decode = '', 
                                    instance_type = 'Code', ), 
                                study_intervention_id = '', 
                                notes = [
                                    openapi_client.models.comment_annotation.CommentAnnotation(
                                        id = '0', 
                                        text = '', 
                                        codes = [
                                            openapi_client.models.code.Code(
                                                id = '0', 
                                                code = '', 
                                                code_system = '', 
                                                code_system_version = '', 
                                                decode = '', 
                                                instance_type = 'Code', )
                                            ], 
                                        instance_type = 'CommentAnnotation', )
                                    ], 
                                instance_type = 'Procedure', )
                            ], 
                        biomedical_concept_ids = [
                            ''
                            ], 
                        bc_category_ids = [
                            ''
                            ], 
                        bc_surrogate_ids = [
                            ''
                            ], 
                        timeline_id = '', 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'Activity', )
                    ],
                biomedical_concepts = [
                    openapi_client.models.biomedical_concept.BiomedicalConcept(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        synonyms = [
                            ''
                            ], 
                        reference = '', 
                        properties = [
                            openapi_client.models.biomedical_concept_property.BiomedicalConceptProperty(
                                id = '0', 
                                name = '0', 
                                label = '', 
                                is_required = True, 
                                is_enabled = True, 
                                datatype = '', 
                                response_codes = [
                                    openapi_client.models.response_code.ResponseCode(
                                        id = '0', 
                                        is_enabled = True, 
                                        code = openapi_client.models.code.Code(
                                            id = '0', 
                                            code = '', 
                                            code_system = '', 
                                            code_system_version = '', 
                                            decode = '', 
                                            instance_type = 'Code', ), 
                                        instance_type = 'ResponseCode', )
                                    ], 
                                code = openapi_client.models.alias_code.AliasCode(
                                    id = '0', 
                                    standard_code = openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', ), 
                                    standard_code_aliases = [
                                        
                                        ], 
                                    instance_type = 'AliasCode', ), 
                                notes = [
                                    openapi_client.models.comment_annotation.CommentAnnotation(
                                        id = '0', 
                                        text = '', 
                                        codes = [
                                            
                                            ], 
                                        instance_type = 'CommentAnnotation', )
                                    ], 
                                instance_type = 'BiomedicalConceptProperty', )
                            ], 
                        code = openapi_client.models.alias_code.AliasCode(
                            id = '0', 
                            standard_code = , 
                            instance_type = 'AliasCode', ), 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'BiomedicalConcept', )
                    ],
                bc_categories = [
                    openapi_client.models.biomedical_concept_category.BiomedicalConceptCategory(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        child_ids = [
                            ''
                            ], 
                        member_ids = [
                            ''
                            ], 
                        code = openapi_client.models.alias_code.AliasCode(
                            id = '0', 
                            standard_code = openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', ), 
                            standard_code_aliases = [
                                openapi_client.models.code.Code(
                                    id = '0', 
                                    code = '', 
                                    code_system = '', 
                                    code_system_version = '', 
                                    decode = '', 
                                    instance_type = 'Code', )
                                ], 
                            instance_type = 'AliasCode', ), 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'BiomedicalConceptCategory', )
                    ],
                bc_surrogates = [
                    openapi_client.models.biomedical_concept_surrogate.BiomedicalConceptSurrogate(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        reference = '', 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', )
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'BiomedicalConceptSurrogate', )
                    ],
                arms = [
                    openapi_client.models.study_arm.StudyArm(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        data_origin_description = '', 
                        data_origin_type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        population_ids = [
                            ''
                            ], 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'StudyArm', )
                    ],
                study_cells = [
                    openapi_client.models.study_cell.StudyCell(
                        id = '0', 
                        arm_id = '', 
                        epoch_id = '', 
                        element_ids = [
                            ''
                            ], 
                        instance_type = 'StudyCell', )
                    ],
                rationale = '',
                epochs = [
                    openapi_client.models.study_epoch.StudyEpoch(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        previous_id = '', 
                        next_id = '', 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', )
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'StudyEpoch', )
                    ],
                elements = [
                    openapi_client.models.study_element.StudyElement(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        transition_start_rule = openapi_client.models.transition_rule.TransitionRule(
                            id = '0', 
                            name = '0', 
                            label = '', 
                            description = '', 
                            text = '', 
                            instance_type = 'TransitionRule', ), 
                        transition_end_rule = openapi_client.models.transition_rule.TransitionRule(
                            id = '0', 
                            name = '0', 
                            label = '', 
                            description = '', 
                            text = '', 
                            instance_type = 'TransitionRule', ), 
                        study_intervention_ids = [
                            ''
                            ], 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', )
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'StudyElement', )
                    ],
                estimands = [
                    openapi_client.models.estimand.Estimand(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        population_summary = '', 
                        analysis_population_id = '', 
                        intervention_ids = [
                            ''
                            ], 
                        variable_of_interest_id = '', 
                        intercurrent_events = [
                            openapi_client.models.intercurrent_event.IntercurrentEvent(
                                id = '0', 
                                name = '0', 
                                label = '', 
                                description = '', 
                                text = '', 
                                dictionary_id = '', 
                                notes = [
                                    openapi_client.models.comment_annotation.CommentAnnotation(
                                        id = '0', 
                                        text = '', 
                                        codes = [
                                            openapi_client.models.code.Code(
                                                id = '0', 
                                                code = '', 
                                                code_system = '', 
                                                code_system_version = '', 
                                                decode = '', 
                                                instance_type = 'Code', )
                                            ], 
                                        instance_type = 'CommentAnnotation', )
                                    ], 
                                instance_type = 'IntercurrentEvent', 
                                strategy = '', )
                            ], 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'Estimand', )
                    ],
                indications = [
                    openapi_client.models.indication.Indication(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        codes = [
                            openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', )
                            ], 
                        is_rare_disease = True, 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'Indication', )
                    ],
                study_interventions = [
                    openapi_client.models.study_intervention.StudyIntervention(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        role = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        minimum_response_duration = openapi_client.models.quantity.Quantity(
                            id = '0', 
                            value = 1.337, 
                            unit = openapi_client.models.alias_code.AliasCode(
                                id = '0', 
                                standard_code = , 
                                standard_code_aliases = [
                                    
                                    ], 
                                instance_type = 'AliasCode', ), 
                            instance_type = 'Quantity', ), 
                        codes = [
                            
                            ], 
                        administrations = [
                            openapi_client.models.administration.Administration(
                                id = '0', 
                                name = '0', 
                                label = '', 
                                description = '', 
                                duration = openapi_client.models.administration_duration.AdministrationDuration(
                                    id = '0', 
                                    quantity = openapi_client.models.quantity.Quantity(
                                        id = '0', 
                                        value = 1.337, 
                                        instance_type = 'Quantity', ), 
                                    description = '', 
                                    duration_will_vary = True, 
                                    reason_duration_will_vary = '', 
                                    instance_type = 'AdministrationDuration', ), 
                                dose = , 
                                route = openapi_client.models.alias_code.AliasCode(
                                    id = '0', 
                                    standard_code = , 
                                    instance_type = 'AliasCode', ), 
                                frequency = , 
                                administrable_product_id = '', 
                                medical_device_id = '', 
                                notes = [
                                    openapi_client.models.comment_annotation.CommentAnnotation(
                                        id = '0', 
                                        text = '', 
                                        instance_type = 'CommentAnnotation', )
                                    ], 
                                instance_type = 'Administration', )
                            ], 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'StudyIntervention', )
                    ],
                objectives = [
                    openapi_client.models.objective.Objective(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        text = '', 
                        dictionary_id = '', 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', )
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'Objective', 
                        level = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        endpoints = [
                            openapi_client.models.endpoint.Endpoint(
                                id = '0', 
                                name = '0', 
                                label = '', 
                                description = '', 
                                text = '', 
                                dictionary_id = '', 
                                instance_type = 'Endpoint', 
                                purpose = '', 
                                level = , )
                            ], )
                    ],
                population = openapi_client.models.study_design_population.StudyDesignPopulation(
                    id = '0', 
                    name = '0', 
                    label = '', 
                    description = '', 
                    includes_healthy_subjects = True, 
                    planned_enrollment_number = openapi_client.models.range.Range(
                        id = '0', 
                        min_value = 1.337, 
                        max_value = 1.337, 
                        unit = openapi_client.models.alias_code.AliasCode(
                            id = '0', 
                            standard_code = openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', ), 
                            standard_code_aliases = [
                                openapi_client.models.code.Code(
                                    id = '0', 
                                    code = '', 
                                    code_system = '', 
                                    code_system_version = '', 
                                    decode = '', 
                                    instance_type = 'Code', )
                                ], 
                            instance_type = 'AliasCode', ), 
                        is_approximate = True, 
                        instance_type = 'Range', ), 
                    planned_completion_number = openapi_client.models.range.Range(
                        id = '0', 
                        min_value = 1.337, 
                        max_value = 1.337, 
                        is_approximate = True, 
                        instance_type = 'Range', ), 
                    planned_sex = [
                        
                        ], 
                    criterion_ids = [
                        ''
                        ], 
                    planned_age = , 
                    notes = [
                        openapi_client.models.comment_annotation.CommentAnnotation(
                            id = '0', 
                            text = '', 
                            codes = [
                                
                                ], 
                            instance_type = 'CommentAnnotation', )
                        ], 
                    instance_type = 'StudyDesignPopulation', 
                    cohorts = [
                        openapi_client.models.study_cohort.StudyCohort(
                            id = '0', 
                            name = '0', 
                            label = '', 
                            description = '', 
                            includes_healthy_subjects = True, 
                            planned_completion_number = , 
                            planned_age = , 
                            instance_type = 'StudyCohort', 
                            characteristics = [
                                openapi_client.models.characteristic.Characteristic(
                                    id = '0', 
                                    name = '0', 
                                    label = '', 
                                    description = '', 
                                    text = '', 
                                    dictionary_id = '', 
                                    instance_type = 'Characteristic', )
                                ], )
                        ], ),
                analysis_populations = [
                    openapi_client.models.analysis_population.AnalysisPopulation(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        text = '', 
                        subset_of_ids = [
                            ''
                            ], 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', )
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'AnalysisPopulation', )
                    ],
                schedule_timelines = [
                    openapi_client.models.schedule_timeline.ScheduleTimeline(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        main_timeline = True, 
                        entry_condition = '', 
                        entry_id = '', 
                        exits = [
                            openapi_client.models.schedule_timeline_exit.ScheduleTimelineExit(
                                id = '0', 
                                instance_type = 'ScheduleTimelineExit', )
                            ], 
                        timings = [
                            openapi_client.models.timing.Timing(
                                id = '0', 
                                name = '0', 
                                label = '', 
                                description = '', 
                                type = openapi_client.models.code.Code(
                                    id = '0', 
                                    code = '', 
                                    code_system = '', 
                                    code_system_version = '', 
                                    decode = '', 
                                    instance_type = 'Code', ), 
                                value = '', 
                                value_label = '', 
                                relative_to_from = openapi_client.models.code.Code(
                                    id = '0', 
                                    code = '', 
                                    code_system = '', 
                                    code_system_version = '', 
                                    decode = '', 
                                    instance_type = 'Code', ), 
                                relative_from_scheduled_instance_id = '', 
                                relative_to_scheduled_instance_id = '', 
                                window_lower = '', 
                                window_upper = '', 
                                window_label = '', 
                                instance_type = 'Timing', )
                            ], 
                        instances = [
                            null
                            ], 
                        instance_type = 'ScheduleTimeline', )
                    ],
                biospecimen_retentions = [
                    openapi_client.models.biospecimen_retention.BiospecimenRetention(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        is_retained = True, 
                        includes_dna = True, 
                        instance_type = 'BiospecimenRetention', )
                    ],
                document_version_ids = [
                    ''
                    ],
                dictionaries = [
                    openapi_client.models.syntax_template_dictionary.SyntaxTemplateDictionary(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        parameter_maps = [
                            openapi_client.models.parameter_map.ParameterMap(
                                id = '0', 
                                tag = '', 
                                reference = '', 
                                instance_type = 'ParameterMap', )
                            ], 
                        instance_type = 'SyntaxTemplateDictionary', )
                    ],
                conditions = [
                    openapi_client.models.condition.Condition(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        text = '', 
                        dictionary_id = '', 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', )
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'Condition', 
                        context_ids = [
                            ''
                            ], 
                        applies_to_ids = [
                            ''
                            ], )
                    ],
                notes = [
                    openapi_client.models.comment_annotation.CommentAnnotation(
                        id = '0', 
                        text = '', 
                        codes = [
                            openapi_client.models.code.Code(
                                id = '0', 
                                code = '', 
                                code_system = '', 
                                code_system_version = '', 
                                decode = '', 
                                instance_type = 'Code', )
                            ], 
                        instance_type = 'CommentAnnotation', )
                    ],
                instance_type = 'ObservationalStudyDesign',
                sub_types = [
                    openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', )
                    ],
                model = openapi_client.models.code.Code(
                    id = '0', 
                    code = '', 
                    code_system = '', 
                    code_system_version = '', 
                    decode = '', 
                    instance_type = 'Code', ),
                intent_types = [
                    openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', )
                    ],
                blinding_schema = openapi_client.models.alias_code.AliasCode(
                    id = '0', 
                    standard_code = openapi_client.models.code.Code(
                        id = '0', 
                        code = '', 
                        code_system = '', 
                        code_system_version = '', 
                        decode = '', 
                        instance_type = 'Code', ), 
                    standard_code_aliases = [
                        openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', )
                        ], 
                    instance_type = 'AliasCode', ),
                time_perspective = openapi_client.models.code.Code(
                    id = '0', 
                    code = '', 
                    code_system = '', 
                    code_system_version = '', 
                    decode = '', 
                    instance_type = 'Code', ),
                sampling_method = openapi_client.models.code.Code(
                    id = '0', 
                    code = '', 
                    code_system = '', 
                    code_system_version = '', 
                    decode = '', 
                    instance_type = 'Code', )
            )
        else:
            return StudyVersionInputStudyDesignsInner(
                id = '0',
                name = '0',
                arms = [
                    openapi_client.models.study_arm.StudyArm(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        data_origin_description = '', 
                        data_origin_type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        population_ids = [
                            ''
                            ], 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'StudyArm', )
                    ],
                study_cells = [
                    openapi_client.models.study_cell.StudyCell(
                        id = '0', 
                        arm_id = '', 
                        epoch_id = '', 
                        element_ids = [
                            ''
                            ], 
                        instance_type = 'StudyCell', )
                    ],
                rationale = '',
                epochs = [
                    openapi_client.models.study_epoch.StudyEpoch(
                        id = '0', 
                        name = '0', 
                        label = '', 
                        description = '', 
                        type = openapi_client.models.code.Code(
                            id = '0', 
                            code = '', 
                            code_system = '', 
                            code_system_version = '', 
                            decode = '', 
                            instance_type = 'Code', ), 
                        previous_id = '', 
                        next_id = '', 
                        notes = [
                            openapi_client.models.comment_annotation.CommentAnnotation(
                                id = '0', 
                                text = '', 
                                codes = [
                                    openapi_client.models.code.Code(
                                        id = '0', 
                                        code = '', 
                                        code_system = '', 
                                        code_system_version = '', 
                                        decode = '', 
                                        instance_type = 'Code', )
                                    ], 
                                instance_type = 'CommentAnnotation', )
                            ], 
                        instance_type = 'StudyEpoch', )
                    ],
                instance_type = 'ObservationalStudyDesign',
                model = openapi_client.models.code.Code(
                    id = '0', 
                    code = '', 
                    code_system = '', 
                    code_system_version = '', 
                    decode = '', 
                    instance_type = 'Code', ),
                time_perspective = openapi_client.models.code.Code(
                    id = '0', 
                    code = '', 
                    code_system = '', 
                    code_system_version = '', 
                    decode = '', 
                    instance_type = 'Code', ),
        )
        """

    def testStudyVersionInputStudyDesignsInner(self):
        """Test StudyVersionInputStudyDesignsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
