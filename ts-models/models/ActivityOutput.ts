/**
 * DDF USDM API
 * A simple TransCelerate Digital Data Flow (DDF) Study Definitions Repository API.
 *
 * OpenAPI spec version: 3.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CommentAnnotation } from '../models/CommentAnnotation';
import { ProcedureOutput } from '../models/ProcedureOutput';


export class ActivityOutput {
    'id': string;
    'name': string;
    'label'?: string | null;
    'description'?: string | null;
    'previousId'?: string | null;
    'nextId'?: string | null;
    'childIds'?: Array<string>;
    'definedProcedures'?: Array<ProcedureOutput>;
    'biomedicalConceptIds'?: Array<string>;
    'bcCategoryIds'?: Array<string>;
    'bcSurrogateIds'?: Array<string>;
    'timelineId'?: string | null;
    'notes'?: Array<CommentAnnotation>;
    'instanceType': ActivityOutputInstanceTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "previousId",
            "baseName": "previousId",
            "type": "string",
            "format": ""
        },
        {
            "name": "nextId",
            "baseName": "nextId",
            "type": "string",
            "format": ""
        },
        {
            "name": "childIds",
            "baseName": "childIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "definedProcedures",
            "baseName": "definedProcedures",
            "type": "Array<ProcedureOutput>",
            "format": ""
        },
        {
            "name": "biomedicalConceptIds",
            "baseName": "biomedicalConceptIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "bcCategoryIds",
            "baseName": "bcCategoryIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "bcSurrogateIds",
            "baseName": "bcSurrogateIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "timelineId",
            "baseName": "timelineId",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "Array<CommentAnnotation>",
            "format": ""
        },
        {
            "name": "instanceType",
            "baseName": "instanceType",
            "type": "ActivityOutputInstanceTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ActivityOutput.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ActivityOutputInstanceTypeEnum {
    Activity = 'Activity'
}

