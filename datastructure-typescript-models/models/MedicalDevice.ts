/**
 * USDM to OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* NCI C-Code: C16830 Definition: Any instrument, apparatus, implement, machine, appliance, implant, reagent for in vitro use, software, material or other similar or related article, intended by the manufacturer to be used, alone or in combination for, one or more specific medical purpose(s). [After REGULATION (EU) 2017/745 OF THE EUROPEAN PARLIAMENT AND OF THE COUNCIL of 5 April 2017 on medical devices] Preferred Term: Medical Device
*/
export class MedicalDevice {
    'id': string;
    'name': string;
    'description': string;
    'label': string;
    'hardwareVersion': string;
    'softwareVersion': string;
    'embeddedProduct'?: string;
    'sourcing'?: string;
    'notes': string;
    'identifiers'?: Array<string>;
    'instanceType'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "hardwareVersion",
            "baseName": "hardwareVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "softwareVersion",
            "baseName": "softwareVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "embeddedProduct",
            "baseName": "embeddedProduct",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourcing",
            "baseName": "sourcing",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        },
        {
            "name": "identifiers",
            "baseName": "identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "instanceType",
            "baseName": "instanceType",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MedicalDevice.attributeTypeMap;
    }

    public constructor() {
    }
}
